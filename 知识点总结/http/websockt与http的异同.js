// WebSocket与HTTP协议的异同

// 相同点主要有：

// 1.都是基于TCP的应用层协议；
// 2.都使用Request/Response模型进行连接的建立；
// 3.在连接的建立过程中对错误的处理方式相同，在这个阶段WS可能返回和HTTP相同的返回码；
// 4.都可以在网络中传输数据。


//不同点
// 1.WS使用HTTP来建立连接，但是定义了一系列新的header域，这些域在HTTP中并不会使用；
// 2.WS是HTML5中的协议，支持持久连接；而Http协议不支持持久连接。
// 3.WS的连接不能通过中间人来转发，它必须是一个直接连接；
// 4.WS连接建立之后，通信双方都可以在任何时刻向另一方发送数据；
// 5.WS连接建立之后，数据的传输使用帧来传递，不再需要Request消息；
// 6.WS的数据帧有序。

//websocket优点

// 1.传统的http请求，其并发能力都是依赖同时发起多个TCP连接访问服务器实现的(因此并发数受限于浏览器允许的并发连接数)，
// 而websocket则允许我们在一条ws连接上同时并发多个请求，即在A请求发出后A响应还未到达，就可以继续发出B请求。
// 由于TCP的慢启动特性（新连接速度上来是需要时间的），以及连接本身的握手损耗，都使得websocket协议的这一特性有很大的效率提升。

// 2.http协议的头部太大，且每个请求携带的几百上千字节的头部大部分是重复的，很多时候可能响应都远没有请求中的header空间大。
// 如此多无效的内容传递是因为无法利用上一条请求内容，websocket则因为复用长连接而没有这一问题。


// 3.websocket支持服务器推送消息，这带来了及时消息通知的更好体验，也是ajax请求无法达到的。
